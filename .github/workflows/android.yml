name: Android CI

on: [push]

jobs:
  build:
    
    runs-on: ubuntu-latest
    env:
      ANDROID_BUILD_TOOLS_VERSION: 34.0.0
      ANDROID_NDK_VERSION: 26.3.11579264
      ANDROID_SDK_PACKAGES: 'tools platform-tools platforms;android-29 build-tools;34.0.0 ndk;26.3.11579264'
      JDK_VERSION: 17
      API: 29
      ANDROID_SDK_ROOT: ${{ github.WORKSPACE }}/.android/sdk
      ANDROID_NDK_ROOT: ${{ github.WORKSPACE }}/.android/sdk/ndk/26.3.11579264
      BUILDBASEDIR: ${{ github.WORKSPACE }}/packaging/android

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.1.1

      - name: Fetch submodules
        run: git submodule update --init --recursive; ls -lh;

      - name: Install auxiliary build tools
        run: sudo apt-get install -y meson gperf scons

      - name: Set up JDK
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '${{ env.JDK_VERSION }}'
          distribution: 'temurin'

      - name: Restore Android SDK cache
        id: restore-android-sdk
        uses: actions/cache/restore@v4
        with:
          key: android-sdk ${{ env.ANDROID_SDK_PACKAGES }}
          path: ${{ env.ANDROID_SDK_ROOT }}

      - name: Set up Android SDK
        if: ${{ steps.restore-android-sdk.outputs.cache-hit  != 'true' }}
        uses: android-actions/setup-android@v3
        with:
          packages: ${{ env.ANDROID_SDK_PACKAGES }}

      - name: Save Android SDK cache
        if: ${{ steps.restore-android-sdk.outputs.cache-hit  != 'true' }}
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-android-sdk.outputs.cache-primary-key}}
          path: ${{ env.ANDROID_SDK_ROOT }}

      - name: Restore Wesnoth dependencies cache
        id: restore-deps-cache
        uses: actions/cache/restore@v4
        env:
          PREFIXDIR: ${{ env.BUILDBASEDIR }}/prefix
        with:
          key: wesnoth-android-deps-r1
          path: ${{ env.PREFIXDIR }}

      - name: Download and build Wesnoth dependencies
        if: ${{ steps.restore-deps-cache.outputs.cache-hit  != 'true' }}
        env:
          PREFIXDIR: ${{ env.BUILDBASEDIR }}/prefix
          DOWNLOADDIR: ${{ env.BUILDBASEDIR }}/download
          BUILDDIR: ${{ env.BUILDBASEDIR }}/build
        run: cd packaging/android/build-android-dependencies; ./build-android-deps.sh;

      - name: Save Wesnoth dependencies cache
        if: ${{ steps.restore-deps-cache.outputs.cache-hit  != 'true' }}
        uses: actions/cache/save@v4
        env:
          PREFIXDIR: ${{ env.BUILDBASEDIR }}/prefix
        with:
          key: ${{ steps.restore-deps-cache.outputs.cache-primary-key }}
          path: ${{ env.PREFIXDIR }}

      - name: Build Wesnoth and create APKS
        env:
          PREFIXDIR: ${{ env.BUILDBASEDIR }}/prefix
          DOWNLOADDIR: ${{ env.BUILDBASEDIR }}/download
          AABBASEDIR: ${{ env.BUILDBASEDIR }}/aab-base
          APKBASEDIR: ${{ env.BUILDBASEDIR }}
          AABOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.aab
          APKSOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apks
          APKOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apk
        run: ls -lh; cd packaging/android; PATH=$PATH:$ANDROID_SDK_ROOT/build-tools/$ANDROID_BUILD_TOOLS_VERSION ./build-apks;

      - name: Upload AAB
        uses: actions/upload-artifact@v4.3.1
        env:
          AABOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.aab
          APKSOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apks
          APKOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apk
        with:
          name: wesnoth-debug.aab
          path: ${{ env.AABOUTPUT }}

      - name: Upload APKS
        uses: actions/upload-artifact@v4.3.1
        env:
          AABOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.aab
          APKSOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apks
          APKOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apk
        with:
          name: wesnoth-debug.apks
          path: ${{ env.APKSOUTPUT }}

      - name: Upload APK
        uses: actions/upload-artifact@v4.3.1
        env:
          AABOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.aab
          APKSOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apks
          APKOUTPUT: ${{ env.BUILDBASEDIR }}/wesnoth-debug.apk
        with:
          name: wesnoth-debug.apk
          path: ${{ env.APKOUTPUT }}
            
            #- name: Grant execute permission for gradlew
            #  run: chmod +x gradlew
            #- name: Build with Gradle
            #  run: ./gradlew build
            
